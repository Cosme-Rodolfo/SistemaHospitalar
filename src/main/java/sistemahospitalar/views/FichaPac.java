/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package sistemahospitalar.views;


import java.awt.Font;
import javax.swing.BorderFactory;
import javax.swing.border.Border;
import javax.swing.table.DefaultTableModel;
import sistemahospitalar.backend.ConsultaMedica;
import sistemahospitalar.backend.Paciente;
import sistemahospitalar.backend.Responsavel;

/**
 *
 * @author caiod
 */
public class FichaPac extends javax.swing.JFrame {

    /**
     * Creates new form CadastroPac
     */

    Paciente meuPaciente;
    public FichaPac(Paciente paciente) {
        initComponents();
        
        meuPaciente = paciente;
        
        for (ConsultaMedica consulta : meuPaciente.getHistoricoConsultasMedica()){
            adicionarATabelaCons(consulta);
        }
        for (Responsavel responsavel : meuPaciente.getResponsaveis()){
            adicionarATabelaRes(responsavel);
        }
        String title = "Finha de: " + meuPaciente.getNomeCompleto();
        Border border = BorderFactory.createTitledBorder(title);
        jPanel1.setBorder(border);
        ((javax.swing.border.TitledBorder) jPanel1.getBorder()).
        setTitleFont(new Font("SansSerif", Font.BOLD, 24));

        jPanel1.repaint();
    }

    private FichaPac() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButtonFiltrarNomes = new javax.swing.JButton();
        jTextFieldInserirId = new javax.swing.JTextField();
        jButtonVoltar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableConsulta = new javax.swing.JTable();
        jTextFieldInserirNome = new javax.swing.JTextField();
        jButtonFiltrarId = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableResps = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Histórico de: NOME", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("SansSerif", 1, 24))); // NOI18N

        jButtonFiltrarNomes.setText("FILTRAR NOME RESP.");
        jButtonFiltrarNomes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFiltrarNomesActionPerformed(evt);
            }
        });

        jButtonVoltar.setText("voltar");
        jButtonVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonVoltarActionPerformed(evt);
            }
        });

        jTableConsulta.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID Consulta", "ID Paciente", "ID Medico", "Exame Queixa", "Diagnostico", "Prescriçao", "indicação de Cirurgica"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableConsulta.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableConsultaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableConsulta);

        jButtonFiltrarId.setText("FILTRAR ID MED.");
        jButtonFiltrarId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFiltrarIdActionPerformed(evt);
            }
        });

        jTableResps.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id Responsável", "Nome", "Telefone", "Celular", "Email"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTableResps);

        jLabel2.setFont(new java.awt.Font("SansSerif", 3, 14)); // NOI18N
        jLabel2.setText("Historico de consultas:");

        jLabel3.setFont(new java.awt.Font("SansSerif", 3, 14)); // NOI18N
        jLabel3.setText("Lista de responsáveis:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 800, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jTextFieldInserirId, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(jButtonFiltrarId)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButtonVoltar, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addComponent(jScrollPane2)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jTextFieldInserirNome, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonFiltrarNomes)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldInserirId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonFiltrarId))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldInserirNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonFiltrarNomes))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButtonVoltar, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private void adicionarATabelaCons(ConsultaMedica consulta) {
        DefaultTableModel model = (DefaultTableModel) jTableConsulta.getModel();
        Object[] rowData;
        rowData = new Object[]{
            consulta.getIdConsulta(),
            consulta.getIdPaciente(),
            consulta.getIdMedico(),
            consulta.getExameQueixa(),
            consulta.getDiagnostico(),
            consulta.getPrescricao(),
            consulta.isIndicacaoCirurgia(),
        };
        model.addRow(rowData);  
    }
    private void adicionarATabelaRes(Responsavel reposavel) {
        DefaultTableModel model = (DefaultTableModel) jTableResps.getModel();
        Object[] rowData = new Object[]{
            reposavel.getIdResponsavel(),
            reposavel.getNomeResponsavel(),
            reposavel.getTelResponsavel(),
            reposavel.getCelResponsavel(),
            reposavel.getEmailResponsavel(),
        };
        model.addRow(rowData);  
    }
    
    private void exibirApenasLinhaComId(int ID) {
        DefaultTableModel model = (DefaultTableModel) jTableConsulta.getModel();
        for (int i = 0; i < model.getRowCount(); i++) {
            int idLinha = (int) model.getValueAt(i, 0); 
            if (idLinha != ID) {
                model.removeRow(i);
                i--; // Atualiza o índice após a remoção da linha
            }
        }
    }
    private void exibirApenasLinhaComNome(String nomeRes) {
        DefaultTableModel model = (DefaultTableModel) jTableResps.getModel();
        for (int i = 0; i < model.getRowCount(); i++) {
            String nomeLinha = (String) model.getValueAt(i, 1); 
            if (!nomeLinha.contains(nomeRes)) {
                model.removeRow(i);
                i--; // Atualiza o índice após a remoção da linha
            }
        }
    }
    private void exibirTodasAsLinhasCons() {
        DefaultTableModel model = (DefaultTableModel) jTableConsulta.getModel();
        model.setRowCount(0); // remove os elementos filtrados para evitar duplicação 
        
        for (ConsultaMedica consulta : meuPaciente.getHistoricoConsultasMedica()){
            adicionarATabelaCons(consulta); // preenche novamente a tabela com os todos os valores 
        }
    }
    private void exibirTodasAsLinhasRes() {
        DefaultTableModel model = (DefaultTableModel) jTableResps.getModel();
        model.setRowCount(0); // remove os elementos filtrados para evitar duplicação 
        
        for (Responsavel responsavel : meuPaciente.getResponsaveis()){
            adicionarATabelaRes(responsavel); // preenche novamente a tabela com os todos os valores 
        }
    }
    private void jButtonFiltrarNomesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFiltrarNomesActionPerformed
        // Obtem o ID digitado
        String nomeResponsavel = jTextFieldInserirNome.getText();
        exibirTodasAsLinhasRes();
        // Exibe apenas a linha que corresponde ao nome pesquisado
        System.out.println(nomeResponsavel);
        if (nomeResponsavel.length() > 1){
            exibirApenasLinhaComNome(nomeResponsavel);
        }
        else {
            exibirTodasAsLinhasRes();
        }
    }//GEN-LAST:event_jButtonFiltrarNomesActionPerformed

    private void jButtonVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonVoltarActionPerformed
        // Cria uma instância da TelaPaciente
        TelaListagemPac listagemPac = new TelaListagemPac();

        // Torna a TelaPaciente visível
        listagemPac.setVisible(true);

        // Opcional: fecha a TelaPrincipal se desejado
        dispose();
    }//GEN-LAST:event_jButtonVoltarActionPerformed

    private void jTableConsultaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableConsultaMouseClicked

    }//GEN-LAST:event_jTableConsultaMouseClicked

    private void jButtonFiltrarIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFiltrarIdActionPerformed
        // Obtem o ID digitado
        String id = jTextFieldInserirId.getText();
        exibirTodasAsLinhasCons();
        // Exibe apenas a linha que corresponde ao nome pesquisado
        if (!id.isEmpty()){
            exibirApenasLinhaComId(Integer.parseInt(id));
        }
        else {
            exibirTodasAsLinhasCons();
        }
    }//GEN-LAST:event_jButtonFiltrarIdActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FichaPac.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FichaPac.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FichaPac.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FichaPac.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FichaPac().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonFiltrarId;
    private javax.swing.JButton jButtonFiltrarNomes;
    private javax.swing.JButton jButtonVoltar;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableConsulta;
    private javax.swing.JTable jTableResps;
    private javax.swing.JTextField jTextFieldInserirId;
    private javax.swing.JTextField jTextFieldInserirNome;
    // End of variables declaration//GEN-END:variables
}
